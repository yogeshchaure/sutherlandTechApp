package com.sgs.model.entity;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 14 17:08:27 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsRevAllocatedDataImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        RadId,
        AllocationId,
        CostIdentificationId,
        TpaApplicability,
        AllocationRuleId,
        TransactionCategory,
        SourceGlAccount,
        SourceBu,
        SourceJobCode,
        SourceAmount,
        TargetAccount,
        TargetBu,
        TargetJobCode,
        ServiceCategory,
        AccountingTreatment,
        MarkUpRage,
        Amount,
        MarkUpAmount,
        TotalAmount,
        TargetTransaction,
        Status,
        SelectInd,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        ConsolidatedInvAmount,
        GstAmount,
        GstRate,
        WhtAmount,
        WhtRate,
        SOURCEOU,
        TARGETOU;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RADID = AttributesEnum.RadId.index();
    public static final int ALLOCATIONID = AttributesEnum.AllocationId.index();
    public static final int COSTIDENTIFICATIONID = AttributesEnum.CostIdentificationId.index();
    public static final int TPAAPPLICABILITY = AttributesEnum.TpaApplicability.index();
    public static final int ALLOCATIONRULEID = AttributesEnum.AllocationRuleId.index();
    public static final int TRANSACTIONCATEGORY = AttributesEnum.TransactionCategory.index();
    public static final int SOURCEGLACCOUNT = AttributesEnum.SourceGlAccount.index();
    public static final int SOURCEBU = AttributesEnum.SourceBu.index();
    public static final int SOURCEJOBCODE = AttributesEnum.SourceJobCode.index();
    public static final int SOURCEAMOUNT = AttributesEnum.SourceAmount.index();
    public static final int TARGETACCOUNT = AttributesEnum.TargetAccount.index();
    public static final int TARGETBU = AttributesEnum.TargetBu.index();
    public static final int TARGETJOBCODE = AttributesEnum.TargetJobCode.index();
    public static final int SERVICECATEGORY = AttributesEnum.ServiceCategory.index();
    public static final int ACCOUNTINGTREATMENT = AttributesEnum.AccountingTreatment.index();
    public static final int MARKUPRAGE = AttributesEnum.MarkUpRage.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int MARKUPAMOUNT = AttributesEnum.MarkUpAmount.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int TARGETTRANSACTION = AttributesEnum.TargetTransaction.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int SELECTIND = AttributesEnum.SelectInd.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int CONSOLIDATEDINVAMOUNT = AttributesEnum.ConsolidatedInvAmount.index();
    public static final int GSTAMOUNT = AttributesEnum.GstAmount.index();
    public static final int GSTRATE = AttributesEnum.GstRate.index();
    public static final int WHTAMOUNT = AttributesEnum.WhtAmount.index();
    public static final int WHTRATE = AttributesEnum.WhtRate.index();
    public static final int SOURCEOU = AttributesEnum.SOURCEOU.index();
    public static final int TARGETOU = AttributesEnum.TARGETOU.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsRevAllocatedDataImpl() {
    }

    /**
     * @param radId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer radId) {
        return new Key(new Object[] { radId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsRevAllocatedData");
    }


    /**
     * Gets the attribute value for CONSOLIDATEDINVAMOUNT, using the alias name CONSOLIDATEDINVAMOUNT.
     * @return the value of CONSOLIDATEDINVAMOUNT
     */
    public String getCONSOLIDATEDINVAMOUNT() {
        return (String) getAttributeInternal(CONSOLIDATEDINVAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CONSOLIDATEDINVAMOUNT.
     * @param value value to set the CONSOLIDATEDINVAMOUNT
     */
    public void setCONSOLIDATEDINVAMOUNT(String value) {
        setAttributeInternal(CONSOLIDATEDINVAMOUNT, value);
    }

    /**
     * Gets the attribute value for GSTAMOUNT, using the alias name GSTAMOUNT.
     * @return the value of GSTAMOUNT
     */
    public String getGSTAMOUNT() {
        return (String) getAttributeInternal(GSTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GSTAMOUNT.
     * @param value value to set the GSTAMOUNT
     */
    public void setGSTAMOUNT(String value) {
        setAttributeInternal(GSTAMOUNT, value);
    }

    /**
     * Gets the attribute value for GSTRATE, using the alias name GSTRATE.
     * @return the value of GSTRATE
     */
    public String getGSTRATE() {
        return (String) getAttributeInternal(GSTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GSTRATE.
     * @param value value to set the GSTRATE
     */
    public void setGSTRATE(String value) {
        setAttributeInternal(GSTRATE, value);
    }

    /**
     * Gets the attribute value for WHTAMOUNT, using the alias name WHTAMOUNT.
     * @return the value of WHTAMOUNT
     */
    public String getWHTAMOUNT() {
        return (String) getAttributeInternal(WHTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WHTAMOUNT.
     * @param value value to set the WHTAMOUNT
     */
    public void setWHTAMOUNT(String value) {
        setAttributeInternal(WHTAMOUNT, value);
    }

    /**
     * Gets the attribute value for WHTRATE, using the alias name WHTRATE.
     * @return the value of WHTRATE
     */
    public String getWHTRATE() {
        return (String) getAttributeInternal(WHTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WHTRATE.
     * @param value value to set the WHTRATE
     */
    public void setWHTRATE(String value) {
        setAttributeInternal(WHTRATE, value);
    }


}

