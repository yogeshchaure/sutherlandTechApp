package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 21 14:10:13 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsTdsWhtImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        TdsWhtId,
        TaxCode,
        ServiceReceiver,
        ServiceProvider,
        PointOfDeduction,
        TaxBase,
        SectionApplicability,
        IsPanTrcAvailable,
        ValidityPeriodFrom,
        ValidityPeriodTo,
        GlAccounts,
        RateOfTax,
        RecoveryRate,
        Currency,
        ThresholdLimit,
        CummulativeThresholdLimit,
        EffectiveFrom,
        EffectiveTo,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsTdsWhtImpl.class);
    public static final int TDSWHTID = AttributesEnum.TdsWhtId.index();
    public static final int TAXCODE = AttributesEnum.TaxCode.index();
    public static final int SERVICERECEIVER = AttributesEnum.ServiceReceiver.index();
    public static final int SERVICEPROVIDER = AttributesEnum.ServiceProvider.index();
    public static final int POINTOFDEDUCTION = AttributesEnum.PointOfDeduction.index();
    public static final int TAXBASE = AttributesEnum.TaxBase.index();
    public static final int SECTIONAPPLICABILITY = AttributesEnum.SectionApplicability.index();
    public static final int ISPANTRCAVAILABLE = AttributesEnum.IsPanTrcAvailable.index();
    public static final int VALIDITYPERIODFROM = AttributesEnum.ValidityPeriodFrom.index();
    public static final int VALIDITYPERIODTO = AttributesEnum.ValidityPeriodTo.index();
    public static final int GLACCOUNTS = AttributesEnum.GlAccounts.index();
    public static final int RATEOFTAX = AttributesEnum.RateOfTax.index();
    public static final int RECOVERYRATE = AttributesEnum.RecoveryRate.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int THRESHOLDLIMIT = AttributesEnum.ThresholdLimit.index();
    public static final int CUMMULATIVETHRESHOLDLIMIT = AttributesEnum.CummulativeThresholdLimit.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int EFFECTIVETO = AttributesEnum.EffectiveTo.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsTdsWhtImpl() {
    }

    /**
     * Gets the attribute value for TdsWhtId, using the alias name TdsWhtId.
     * @return the value of TdsWhtId
     */
    public Integer getTdsWhtId() {
        return (Integer) getAttributeInternal(TDSWHTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TdsWhtId.
     * @param value value to set the TdsWhtId
     */
    public void setTdsWhtId(Integer value) {
        setAttributeInternal(TDSWHTID, value);
    }

    /**
     * Gets the attribute value for TaxCode, using the alias name TaxCode.
     * @return the value of TaxCode
     */
    public String getTaxCode() {
        return (String) getAttributeInternal(TAXCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxCode.
     * @param value value to set the TaxCode
     */
    public void setTaxCode(String value) {
        setAttributeInternal(TAXCODE, value);
    }

    /**
     * Gets the attribute value for ServiceReceiver, using the alias name ServiceReceiver.
     * @return the value of ServiceReceiver
     */
    public String getServiceReceiver() {
        return (String) getAttributeInternal(SERVICERECEIVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServiceReceiver.
     * @param value value to set the ServiceReceiver
     */
    public void setServiceReceiver(String value) {
        setAttributeInternal(SERVICERECEIVER, value);
    }

    /**
     * Gets the attribute value for ServiceProvider, using the alias name ServiceProvider.
     * @return the value of ServiceProvider
     */
    public String getServiceProvider() {
        return (String) getAttributeInternal(SERVICEPROVIDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServiceProvider.
     * @param value value to set the ServiceProvider
     */
    public void setServiceProvider(String value) {
        setAttributeInternal(SERVICEPROVIDER, value);
    }

    /**
     * Gets the attribute value for PointOfDeduction, using the alias name PointOfDeduction.
     * @return the value of PointOfDeduction
     */
    public String getPointOfDeduction() {
        return (String) getAttributeInternal(POINTOFDEDUCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PointOfDeduction.
     * @param value value to set the PointOfDeduction
     */
    public void setPointOfDeduction(String value) {
        setAttributeInternal(POINTOFDEDUCTION, value);
    }

    /**
     * Gets the attribute value for TaxBase, using the alias name TaxBase.
     * @return the value of TaxBase
     */
    public String getTaxBase() {
        return (String) getAttributeInternal(TAXBASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxBase.
     * @param value value to set the TaxBase
     */
    public void setTaxBase(String value) {
        setAttributeInternal(TAXBASE, value);
    }

    /**
     * Gets the attribute value for SectionApplicability, using the alias name SectionApplicability.
     * @return the value of SectionApplicability
     */
    public String getSectionApplicability() {
        return (String) getAttributeInternal(SECTIONAPPLICABILITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SectionApplicability.
     * @param value value to set the SectionApplicability
     */
    public void setSectionApplicability(String value) {
        setAttributeInternal(SECTIONAPPLICABILITY, value);
    }

    /**
     * Gets the attribute value for IsPanTrcAvailable, using the alias name IsPanTrcAvailable.
     * @return the value of IsPanTrcAvailable
     */
    public String getIsPanTrcAvailable() {
        return (String) getAttributeInternal(ISPANTRCAVAILABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsPanTrcAvailable.
     * @param value value to set the IsPanTrcAvailable
     */
    public void setIsPanTrcAvailable(String value) {
        setAttributeInternal(ISPANTRCAVAILABLE, value);
    }

    /**
     * Gets the attribute value for ValidityPeriodFrom, using the alias name ValidityPeriodFrom.
     * @return the value of ValidityPeriodFrom
     */
    public Date getValidityPeriodFrom() {
        return (Date) getAttributeInternal(VALIDITYPERIODFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidityPeriodFrom.
     * @param value value to set the ValidityPeriodFrom
     */
    public void setValidityPeriodFrom(Date value) {
        setAttributeInternal(VALIDITYPERIODFROM, value);
    }

    /**
     * Gets the attribute value for ValidityPeriodTo, using the alias name ValidityPeriodTo.
     * @return the value of ValidityPeriodTo
     */
    public Date getValidityPeriodTo() {
        return (Date) getAttributeInternal(VALIDITYPERIODTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidityPeriodTo.
     * @param value value to set the ValidityPeriodTo
     */
    public void setValidityPeriodTo(Date value) {
        setAttributeInternal(VALIDITYPERIODTO, value);
    }

    /**
     * Gets the attribute value for GlAccounts, using the alias name GlAccounts.
     * @return the value of GlAccounts
     */
    public String getGlAccounts() {
        return (String) getAttributeInternal(GLACCOUNTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlAccounts.
     * @param value value to set the GlAccounts
     */
    public void setGlAccounts(String value) {
        setAttributeInternal(GLACCOUNTS, value);
    }

    /**
     * Gets the attribute value for RateOfTax, using the alias name RateOfTax.
     * @return the value of RateOfTax
     */
    public Integer getRateOfTax() {
        return (Integer) getAttributeInternal(RATEOFTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateOfTax.
     * @param value value to set the RateOfTax
     */
    public void setRateOfTax(Integer value) {
        setAttributeInternal(RATEOFTAX, value);
    }

    /**
     * Gets the attribute value for RecoveryRate, using the alias name RecoveryRate.
     * @return the value of RecoveryRate
     */
    public Integer getRecoveryRate() {
        return (Integer) getAttributeInternal(RECOVERYRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecoveryRate.
     * @param value value to set the RecoveryRate
     */
    public void setRecoveryRate(Integer value) {
        setAttributeInternal(RECOVERYRATE, value);
    }

    /**
     * Gets the attribute value for Currency, using the alias name Currency.
     * @return the value of Currency
     */
    public String getCurrency() {
        return (String) getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Currency.
     * @param value value to set the Currency
     */
    public void setCurrency(String value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * Gets the attribute value for ThresholdLimit, using the alias name ThresholdLimit.
     * @return the value of ThresholdLimit
     */
    public BigDecimal getThresholdLimit() {
        return (BigDecimal) getAttributeInternal(THRESHOLDLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThresholdLimit.
     * @param value value to set the ThresholdLimit
     */
    public void setThresholdLimit(BigDecimal value) {
        setAttributeInternal(THRESHOLDLIMIT, value);
    }

    /**
     * Gets the attribute value for CummulativeThresholdLimit, using the alias name CummulativeThresholdLimit.
     * @return the value of CummulativeThresholdLimit
     */
    public BigDecimal getCummulativeThresholdLimit() {
        return (BigDecimal) getAttributeInternal(CUMMULATIVETHRESHOLDLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CummulativeThresholdLimit.
     * @param value value to set the CummulativeThresholdLimit
     */
    public void setCummulativeThresholdLimit(BigDecimal value) {
        setAttributeInternal(CUMMULATIVETHRESHOLDLIMIT, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for EffectiveTo, using the alias name EffectiveTo.
     * @return the value of EffectiveTo
     */
    public Date getEffectiveTo() {
        return (Date) getAttributeInternal(EFFECTIVETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveTo.
     * @param value value to set the EffectiveTo
     */
    public void setEffectiveTo(Date value) {
        setAttributeInternal(EFFECTIVETO, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * @param tdsWhtId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer tdsWhtId) {
        return new Key(new Object[] { tdsWhtId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsTdsWht");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setTdsWhtId(am.getDBSequence("SGS_TDS_WHT_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

